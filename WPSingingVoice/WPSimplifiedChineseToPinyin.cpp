#include "WPSingingVoice/WPSimplifiedChineseToPinyin.h"

WPSimplifiedChineseToPinyin::WPSimplifiedChineseToPinyin()
{
	TrieRoot = new TrieNode <char>;
	std::string Word;
	Word = "a";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "an";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ba";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ban";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ben";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "beng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "biao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bing";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "bu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ca";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "can";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ce";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ceng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cha";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "che";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cheng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chua";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chuai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chuang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "chuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ci";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "cuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "da";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "de";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "den";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "deng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "di";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dia";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "diao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "die";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ding";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "diu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "du";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "duan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "dun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "duo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "e";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "en";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "eng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "er";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fa";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "feng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "fu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ga";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ge";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "geng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gua";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "guai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "guan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "guang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "gun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "guo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ha";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "han";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "he";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "heng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hua";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "huai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "huan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "huang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "hun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "huo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ji";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jia";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jiang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jiao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jing";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jiong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jiu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ju";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "juan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jue";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "jun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ka";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ke";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ken";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "keng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ku";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kua";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kuai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kuang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "kuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "la";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "le";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "leng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "li";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lia";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "liang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "liao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ling";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "liu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "long";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lv";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "luan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lue";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lve";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "lun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "luo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "m";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ma";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "man";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "me";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "men";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "meng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "miao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "min";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ming";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "miu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "mu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "na";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ne";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "neng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ni";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "niang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "niao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ning";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "niu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nv";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nve";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "nun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "o";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pa";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "peng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "piao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ping";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "po";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "pu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qia";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qiang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qiao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qing";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qiong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qiu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "quan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "que";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "qun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ran";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "rang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "rao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "re";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ren";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "reng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ri";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "rong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "rou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ru";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ruan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "rui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "run";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ruo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sa";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "san";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "se";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "seng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sha";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "she";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sheng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shua";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shuai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shuang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "shuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "si";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "song";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "su";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "suan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "sun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "suo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ta";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "te";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "teng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ti";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tiao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ting";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "tuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wa";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "weng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "wu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xia";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xian";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xiang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xiao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xie";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xing";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xiong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xiu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xue";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "xun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ya";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ye";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yin";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ying";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "you";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yue";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "yun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "za";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "ze";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zeng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zha";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhao";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhe";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhei";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhen";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zheng";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhua";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhuai";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhuang";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zhuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zi";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zong";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zou";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zu";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zuan";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zui";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zun";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
	Word = "zuo";
	TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();
}

WPSimplifiedChineseToPinyin::~WPSimplifiedChineseToPinyin()
{
	TrieRoot->freeAll();
	TrieRoot = 0;
}

QString WPSimplifiedChineseToPinyin::getPinyin(const QString &S)
{
	QNetworkProxyFactory::setUseSystemConfiguration(true);
	MyWebView.load(QUrl("http://translate.google.cn/?hl=en#zh-CN/zh-CN/" + S));
	//MyWebView.show();
	QEventLoop loop;
	QObject::connect(&MyWebView, SIGNAL(loadFinished(bool)), &loop, SLOT(quit()));
	loop.exec();
	QString TheHtml = MyWebView.page()->mainFrame()->toHtml();
	QString Patten = "text-align: left;\">";
	int Pos = TheHtml.lastIndexOf(Patten);
	if (Pos == - 1)
		return "";
	Pos += Patten.size();
	TheHtml.remove(0, Pos);
	Pos = TheHtml.indexOf("</div>");
	if (Pos == - 1)
		return "";
	TheHtml.truncate(Pos);
	qDebug() << TheHtml;
	return TheHtml;
}


char WPSimplifiedChineseToPinyin::toToneless(const QChar &Ch)
{
	if (Ch == 'a' || Ch == 'A' || Ch == L'ā' || Ch == L'á' || Ch == L'ǎ' || Ch == L'à')
		return 'a';
	if (Ch == 'b' || Ch == 'B')
		return 'b';
	if (Ch == 'c' || Ch == 'C')
		return 'c';
	if (Ch == 'd' || Ch == 'D')
		return 'd';
	if (Ch == 'e' || Ch == 'E' || Ch == L'ē' || Ch == L'é' || Ch == L'ě' || Ch == L'è')
		return 'e';
	if (Ch == 'f' || Ch == 'F')
		return 'f';
	if (Ch == 'g' || Ch == 'G')
		return 'g';
	if (Ch == 'h' || Ch == 'H')
		return 'h';
	if (Ch == 'i' || Ch == 'I' || Ch == L'ī' || Ch == L'í' || Ch == L'ǐ' || Ch == L'ì')
		return 'i';
	if (Ch == 'j' || Ch == 'J')
		return 'j';
	if (Ch == 'k' || Ch == 'K')
		return 'k';
	if (Ch == 'l' || Ch == 'L')
		return 'l';
	if (Ch == 'm' || Ch == 'M')
		return 'm';
	if (Ch == 'n' || Ch == 'N')
		return 'n';
	if (Ch == 'o' || Ch == 'O' || Ch == L'ō' || Ch == L'ó' || Ch == L'ǒ' || Ch == L'ò')
		return 'o';
	if (Ch == 'p' || Ch == 'P')
		return 'p';
	if (Ch == 'q' || Ch == 'Q')
		return 'q';
	if (Ch == 'r' || Ch == 'R')
		return 'r';
	if (Ch == 's' || Ch == 'S')
		return 's';
	if (Ch == 't' || Ch == 'T')
		return 't';
	if (Ch == 'u' || Ch == 'U' || Ch == L'ū' || Ch == L'ú' || Ch == L'ǔ' || Ch == L'ù')
		return 'u';
	if (Ch == 'v' || Ch == 'V' || Ch == L'ǘ' || Ch == L'ü' || Ch == L'ǚ' || Ch == L'ǜ')
		return 'v';
	if (Ch == 'w' || Ch == 'W')
		return 'w';
	if (Ch == 'x' || Ch == 'X')
		return 'x';
	if (Ch == 'y' || Ch == 'Y')
		return 'y';
	if (Ch == 'z' || Ch == 'Z')
		return 'z';
	return '\0';
}

void WPSimplifiedChineseToPinyin::writeCodeAccordingToWeb()
{
	QNetworkProxyFactory::setUseSystemConfiguration(true);
	MyWebView.load(QUrl("http://xh.5156edu.com/pinyi.html"));
	QEventLoop loop;
	QObject::connect(&MyWebView, SIGNAL(loadFinished(bool)), &loop, SLOT(quit()));
	loop.exec();
	QString TheHtml = MyWebView.page()->mainFrame()->toHtml();
	QString Patten = "</a></td>";
	for (int Pos = TheHtml.indexOf(Patten); Pos != - 1; Pos = TheHtml.indexOf(Patten))
	{
		QString Temp = TheHtml;
		Temp.truncate(Pos);
		int t = Temp.lastIndexOf(">");
		Temp.remove(0, t + 1);
		std::cout << "Word = \"" << Temp.toStdString() << "\";" << std::endl;
		std::cout << "TrieRoot->go(std::vector <char> (Word.begin(), Word.end()), TrieNode <char>::EDIT)->endanger();" << std::endl;
		TheHtml.remove(0, Pos + Patten.size());
	}
}

std::vector<std::string> WPSimplifiedChineseToPinyin::parseTonelessPinyin(const QString &GStr)
{
	TrieNode <char> *Here = TrieRoot;
	std::string Temp = "";
	std::string Word = "";
	std::vector <std::string> Result;
	for (QString::ConstIterator it = GStr.begin(); it != GStr.end(); ++ it)
	{
		TrieNode <char> *There = Here->go(toToneless(*it));
		if (!There)
		{
			There = TrieRoot->go(toToneless(*it));
			if (!Word.empty())
				Result.push_back(Word);
			Temp.clear();
			Word.clear();
			if (!There)
				There = TrieRoot;
			else
			{
				Temp.push_back(toToneless(*it));
				if (There->isDangerous())
					Word = Temp;
			}
		}
		else
		{
			Temp.push_back(toToneless(*it));
			if (There->isDangerous())
				Word = Temp;
		}
		Here = There;
	}
	std::cerr << std::endl;
	if (!Word.empty())
		Result.push_back(Word);
	return Result;
}
